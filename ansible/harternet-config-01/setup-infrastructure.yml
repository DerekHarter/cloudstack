- hosts: manager
  
  vars_files:
    - vars/globals.yml
    
  tasks:

    # create the basic default zone, needs to be disabled until we have rest of infrastructure
    - name: Ensure default zone named Zone1 is created and present
      ngine_io.cloudstack.cs_zone:
        name: "{{ zone_name }}"
        dns1: "{{ dns1 }}"
        dns2: "{{ dns2 }}"
        internal_dns1: "{{ internal_dns1 }}"
        internal_dns2: "{{ internal_dns2 }}"
        guest_cidr_address: "{{ guest_cidr_address }}"
        network_type: "{{ network_type }}"
        state: disabled
      
    # # create physical network for the cloud
    # - name: Ensure physical network is created and present
    #   ngine_io.cloudstack.cs_physical_network:
    #     name: "{{ physical_network_name }}"
    #     zone: "{{ zone_name }}"
    #     vlan: "{{ vlan }}"
    #     isolation_method: "{{ isolation_method }}"
        
    # # add guest, management, public and storage trafic to the physical network
    # - name: Add Management traffic types to physical network
    #   ngine_io.cloudstack.cs_traffic_type:
    #     physical_network: "{{ physical_network_name }}"
    #     traffic_type: "Management"
    #     zone: "{{ zone_name }}"

    # - name: Add Guest traffic types to physical network
    #   ngine_io.cloudstack.cs_traffic_type:
    #     physical_network: "{{ physical_network_name }}"
    #     traffic_type: "Guest"
    #     zone: "{{ zone_name }}"

    # - name: Add Public traffic types to physical network
    #   ngine_io.cloudstack.cs_traffic_type:
    #     physical_network: "{{ physical_network_name }}"
    #     traffic_type: "Public"
    #     zone: "{{ zone_name }}"
        
    # - name: Add Storage traffic types to physical network
    #   ngine_io.cloudstack.cs_traffic_type:
    #     physical_network: "{{ physical_network_name }}"
    #     traffic_type: "Storage"
    #     zone: "{{ zone_name }}"
        

    # - name: Can now ensure that the physical network is enabled
    #   ngine_io.cloudstack.cs_physical_network:
    #     name: "{{ physical_network_name }}"
    #     zone: "{{ zone_name }}"
    #     state: enabled
        
    # # create a guest network
    # - name: Ensure our simple guest network is created and present
    #   ngine_io.cloudstack.cs_network:
    #     name: "{{ network_name }}"
    #     zone: "{{ zone_name }}"
    #     display_text: "{{ network_display_text }}"
    #     network_offering: "{{ network_offering }}"
    #     cidr: "{{ network_cidr }}"
    #     dns1: "{{ dns1 }}"
    #     dns2: "{{ dns2 }}"
    #     gateway: "{{ network_gateway }}"
    #     netmask: "{{ network_netmask }}"
        

    # # create a pod
    # - name: Ensure our pod is created and present
    #   ngine_io.cloudstack.cs_pod:
    #     name: "{{ pod_name }}"
    #     zone: "{{ zone_name }}"
    #     gateway: "{{ pod_gateway }}"
    #     netmask: "{{ pod_netmask }}"
    #     start_ip: "{{ pod_start_ip }}"
    #     end_ip: "{{ pod_end_ip }}"

    # # create a vlan ip range
    # - name: create a VLAN IP range for our physical network
    #   ngine_io.cloudstack.cs_vlan_ip_range:
    #     zone: "{{ zone_name }}"
    #     start_ip: "{{ vlan_start_ip }}"
    #     end_ip: "{{ vlan_end_ip }}"
    #     gateway: "{{ pod_gateway }}"
    #     netmask: "{{ pod_netmask }}"
    #     for_virtual_network: true

    # # create a cluster
    # - name: Ensure basic cluster is created and present
    #   ngine_io.cloudstack.cs_cluster:
    #     zone: "{{ zone_name }}"
    #     name: "{{ cluster_name }}"
    #     hypervisor: "{{ hypervisor }}"
    #     cluster_type: "{{ cluster_type }}"
        
