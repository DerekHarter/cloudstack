server {
  listen        443 ssl;
  server_name   media.harter.pro;

  ssl_verify_client off;
  # TODO: copy the certificate and key to the proxy server on provisioning
  ssl_certificate /etc/nginx/conf.d/mediastack.crt;
  ssl_password_file /etc/nginx/conf.d/mediastack.pass;
  ssl_certificate_key /etc/nginx/conf.d/mediastack.key;

  ssl_stapling on;
  ssl_stapling_verify on;
  
  add_header Strict-Transport-Security "max-age=31536000" always;
  
  location / {
    proxy_pass http://192.168.0.2:80;
    
    # app1 reverse proxy follow
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    #upgrade to WebSocket protocol when requested
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  # logs
  error_log /var/log/nginx/media.harter.pro_error.log error;
  access_log /var/log/nginx/media.harter.pro_access.log;

}

server {
      if ($host = media.harter.pro) {
         return 301 https://$host$request_uri;
      }
      listen 80;
      server_name media.harter.pro;

      location / {
          proxy_pass http://192.168.0.2:80;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          #upgrade to WebSocket protocol when requested
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
      }
}